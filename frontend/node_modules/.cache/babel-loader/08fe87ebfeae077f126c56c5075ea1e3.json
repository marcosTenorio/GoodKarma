{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/Desktop/Karma/frontend/src/pages/links.tsx\";\nimport * as React from \"react\";\nimport { Listview } from \"../components/listview/listview\";\nimport { Link } from \"react-router-dom\";\nimport { LinkDetails } from \"../components/link_details/link_details\";\nimport { getAuthToken } from \"../components/with_auth/with_auth\";\nexport var Links =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Links, _React$Component);\n\n  function Links(props) {\n    var _this;\n\n    _classCallCheck(this, Links);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Links).call(this, props));\n    _this.state = {\n      link: null,\n      query: \"\",\n      title: \"\",\n      question: \"\",\n      field: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Links, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getData();\n\n              case 2:\n                data = _context.sent;\n\n                _this2.setState({\n                  link: data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.link === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        var filteredLinks = this.state.link.filter(function (link) {\n          return link.title.indexOf(_this3.state.query) !== -1;\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-text\",\n          placeholder: \"Search\",\n          type: \"text\",\n          onKeyUp: function onKeyUp(e) {\n            return _this3._onSearch(e.currentTarget.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), this._renderPostEditor(), React.createElement(Listview, {\n          items: filteredLinks.map(function (link, linkIndex) {\n            return React.createElement(Link, {\n              to: \"/link_details/\".concat(link.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, React.createElement(LinkDetails, Object.assign({\n              key: linkIndex\n            }, link, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            })));\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"_renderPostEditor\",\n    value: function _renderPostEditor() {\n      var _this4 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        onKeyUp: function onKeyUp(e) {\n          return _this4._updateTitle(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        placeholder: \"write your question here..\",\n        onKeyUp: function onKeyUp(e) {\n          return _this4._updateQuestion(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Field: \"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this4.setState({\n            field: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Choose here\"), React.createElement(\"option\", {\n        value: \"IT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"IT\"), React.createElement(\"option\", {\n        value: \"Business\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Business\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this4._handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Post\")));\n    } // Update the state (title) on keyup\n\n  }, {\n    key: \"_updateTitle\",\n    value: function _updateTitle(title) {\n      this.setState({\n        title: title\n      });\n    } // Update the state (question) on keyup\n\n  }, {\n    key: \"_updateQuestion\",\n    value: function _updateQuestion(question) {\n      this.setState({\n        question: question\n      });\n    }\n  }, {\n    key: \"_onSearch\",\n    value: function _onSearch(query) {\n      this.setState({\n        query: query\n      });\n    }\n  }, {\n    key: \"_handleSubmit\",\n    value: function _handleSubmit() {\n      var _this5 = this;\n\n      var token = getAuthToken();\n\n      if (token) {\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var newReply;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return createPost( //this.state.user.id,\n                  _this5.state.title, _this5.state.field, _this5.state.question, token);\n\n                case 3:\n                  newReply = _context2.sent;\n                  _context2.next = 8;\n                  break;\n\n                case 6:\n                  _context2.prev = 6;\n                  _context2.t0 = _context2[\"catch\"](0);\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[0, 6]]);\n        }))();\n      } else {\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Please sign in if you wish to create a new post...\");\n      }\n    }\n  }]);\n\n  return Links;\n}(React.Component);\n\nfunction getData() {\n  return _getData.apply(this, arguments);\n}\n\nfunction _getData() {\n  _getData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var response, json;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"/links\");\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _getData.apply(this, arguments);\n}\n\nfunction createPost(_x, _x2, _x3, _x4) {\n  return _createPost.apply(this, arguments);\n}\n\nfunction _createPost() {\n  _createPost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(title, field, question, jwt) {\n    var update, response, json;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            update = {\n              title: title,\n              field: field,\n              question: question\n            };\n            _context4.next = 3;\n            return fetch(\"/links\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth-token\": jwt\n              },\n              body: JSON.stringify(update)\n            });\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return response.json();\n\n          case 6:\n            json = _context4.sent;\n            return _context4.abrupt(\"return\", json);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n  return _createPost.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcos/Desktop/Karma/frontend/src/pages/links.tsx"],"names":["React","Listview","Link","LinkDetails","getAuthToken","Links","props","state","link","query","title","question","field","getData","data","setState","filteredLinks","filter","indexOf","e","_onSearch","currentTarget","value","_renderPostEditor","map","linkIndex","id","_updateTitle","target","_updateQuestion","_handleSubmit","token","createPost","newReply","Component","fetch","response","json","jwt","update","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Listview } from \"../components/listview/listview\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkDetails, LinkPreviewDetails } from \"../components/link_details/link_details\";\r\nimport { getAuthToken } from \"../components/with_auth/with_auth\";\r\n\r\ninterface LinksProps {\r\n    //\r\n}\r\n\r\ninterface LinksState {\r\n    link: LinkPreviewDetails[] | null;\r\n    query: string;\r\n    title: string;\r\n    question: string;\r\n    field: string;\r\n}\r\n\r\nexport class Links extends React.Component<LinksProps, LinksState> {\r\n    public constructor(props: LinksProps) {\r\n        super(props);\r\n        this.state = {\r\n            link: null,\r\n            query: \"\",\r\n            title: \"\",\r\n            question: \"\",\r\n            field: \"\"\r\n        };\r\n    }\r\n    public componentWillMount() {\r\n        (async () => {\r\n            const data = await getData();\r\n            this.setState({ link: data });\r\n        })();\r\n    }\r\n    public render() {\r\n        if (this.state.link === null) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            const filteredLinks = this.state.link.filter((link) => {\r\n                return link.title.indexOf(this.state.query) !== -1;\r\n            });\r\n            return <div>\r\n                <input\r\n                    className=\"input-text\"\r\n                    placeholder=\"Search\"\r\n                    type=\"text\"\r\n                    onKeyUp={(e) => this._onSearch(e.currentTarget.value)}\r\n                />\r\n                {this._renderPostEditor()}\r\n                <Listview\r\n                    items={\r\n                        filteredLinks.map((link, linkIndex) => {\r\n                            return (\r\n                                <Link to={`/link_details/${link.id}`}>\r\n                                    <LinkDetails key={linkIndex} {...link} />\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    }\r\n                />\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    private _renderPostEditor() {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        onKeyUp={(e) => this._updateTitle((e as any).target.value)}\r\n                    />\r\n                    <br />\r\n                    <textarea\r\n                        placeholder=\"write your question here..\"\r\n                        onKeyUp={(e) => this._updateQuestion((e as any).target.value)}\r\n                    />\r\n                    <br />\r\n                    <label>Field: </label>\r\n                    <select\r\n                        onChange={e => this.setState({ field: e.target.value })}\r\n                    >\r\n                        <option value=\"\" selected disabled hidden>Choose here</option>\r\n                        <option value=\"IT\">IT</option>\r\n                        <option value=\"Business\">Business</option>\r\n                    </select>\r\n\r\n                    <br />\r\n                    <button onClick={() => this._handleSubmit()}>Post</button>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // Update the state (title) on keyup\r\n    private _updateTitle(title: string) {\r\n        this.setState({ title: title });\r\n    }\r\n    // Update the state (question) on keyup\r\n    private _updateQuestion(question: string) {\r\n        this.setState({ question: question });\r\n    }\r\n\r\n    private _onSearch(query: string) {\r\n        this.setState({ query: query });\r\n    }\r\n\r\n    private _handleSubmit(){\r\n        const token = getAuthToken();\r\n        if(token){\r\n            (async () => {\r\n                try {\r\n                    const newReply = await createPost(\r\n                        //this.state.user.id,\r\n                        this.state.title,\r\n                        this.state.field,\r\n                        this.state.question,\r\n                        token\r\n                    );\r\n                } catch(err) {\r\n                    \r\n                }\r\n            })();\r\n        } else {\r\n            <div>Please sign in if you wish to create a new post...</div>\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nasync function getData() {\r\n    const response = await fetch(\"/links\");\r\n    const json = await response.json();\r\n    return json as LinkPreviewDetails[];\r\n}\r\n\r\nasync function createPost(title: string, field: string, question: string, jwt: string) {\r\n    const update = {\r\n        title: title,\r\n        field: field,\r\n        question: question\r\n    };\r\n    const response = await fetch(\r\n        \"/links\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": jwt\r\n            },\r\n            body: JSON.stringify(update)\r\n        }\r\n    );\r\n    const json = await response.json();\r\n    return json;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}