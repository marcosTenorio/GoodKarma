{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/src/pages/replyDetails.tsx\";\nimport * as React from \"react\"; // import { RepliesDetails as ReplyDetailsComponent } from \"../components/reply_details/reply_details\";\n\nimport { Reply } from \"../components/reply/reply\";\nimport { Comment } from \"../components/comment/comment\";\nimport { getAuthToken } from \"../components/with_auth/with_auth\";\nimport { withRouter } from \"react-router\";\nimport { Listview } from \"../components/listview/listview\";\nexport var ReplyDetailsInternal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReplyDetailsInternal, _React$Component);\n\n  function ReplyDetailsInternal(props) {\n    var _this;\n\n    _classCallCheck(this, ReplyDetailsInternal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReplyDetailsInternal).call(this, props));\n    _this.state = {\n      reply: null,\n      newCommentContent: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ReplyDetailsInternal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getData(_this2.props.id);\n\n              case 2:\n                data = _context.sent;\n\n                _this2.setState({\n                  reply: data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.reply === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Reply, Object.assign({}, this.state.reply, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        })), React.createElement(Listview, {\n          items: this.state.reply.comments.map(function (comment, commentIndex) {\n            return React.createElement(Comment, Object.assign({\n              key: commentIndex\n            }, comment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }));\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), this._renderCommentEditor());\n      }\n    }\n  }, {\n    key: \"_renderCommentEditor\",\n    value: function _renderCommentEditor() {\n      var _this3 = this;\n\n      var token = getAuthToken();\n\n      if (token) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          className: \"input-text\",\n          placeholder: \"Write your comment here\",\n          value: this.state.newCommentContent,\n          onChange: function onChange(e) {\n            return _this3.setState({\n              newCommentContent: e.currentTarget.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3._handleCreateComment();\n          },\n          style: {\n            width: \"60%\"\n          },\n          className: \"btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Please sign in if you wish to write a comment...\");\n      }\n    }\n  }, {\n    key: \"_handleCreateComment\",\n    value: function _handleCreateComment() {\n      var _this4 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var token, newComment;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                token = getAuthToken();\n\n                if (!(token && _this4.state.reply)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 5;\n                return createComment(_this4.state.reply.id, _this4.state.newCommentContent, token);\n\n              case 5:\n                newComment = _context2.sent;\n\n              case 6:\n                _context2.next = 10;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }))();\n    }\n  }]);\n\n  return ReplyDetailsInternal;\n}(React.Component);\nexport var ReplyDetails = withRouter(function (props) {\n  return React.createElement(ReplyDetailsInternal, {\n    id: props.match.params.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n});\n\nfunction getData(_x) {\n  return _getData.apply(this, arguments);\n}\n\nfunction _getData() {\n  _getData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(id) {\n    var response, json;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"/replies/\".concat(id));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _getData.apply(this, arguments);\n}\n\nfunction createComment(_x2, _x3, _x4) {\n  return _createComment.apply(this, arguments);\n}\n\nfunction _createComment() {\n  _createComment = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(replyId, text, jwt) {\n    var update, response, json;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            update = {\n              replyId: replyId,\n              text: text\n            };\n            _context4.next = 3;\n            return fetch(\"/comments\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth-token\": jwt\n              },\n              body: JSON.stringify(update)\n            });\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return response.json();\n\n          case 6:\n            json = _context4.sent;\n            return _context4.abrupt(\"return\", json);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n  return _createComment.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/Levys/Desktop/Goodkarma/GoodKarma/frontend/src/pages/replyDetails.tsx"],"names":["React","Reply","Comment","getAuthToken","withRouter","Listview","ReplyDetailsInternal","props","state","reply","newCommentContent","getData","id","data","setState","comments","map","comment","commentIndex","_renderCommentEditor","token","e","currentTarget","value","_handleCreateComment","width","createComment","newComment","Component","ReplyDetails","match","params","fetch","response","json","replyId","text","jwt","update","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import * as React from \"react\"\n// import { RepliesDetails as ReplyDetailsComponent } from \"../components/reply_details/reply_details\";\nimport { Reply } from \"../components/reply/reply\";\nimport { Comment, CommentDetails } from \"../components/comment/comment\";\nimport { getAuthToken } from \"../components/with_auth/with_auth\";\nimport { withRouter } from \"react-router\";\nimport { Listview } from \"../components/listview/listview\";\n\n\n\ninterface ReplyData {\n    id: number;\n    userId: number;\n    name: string;\n    text: string;\n    date: string;\n    commentCount: number | null;\n    karmaCount: number | null;\n    comments: CommentDetails[];\n}\n\ninterface ReplyDetailsProps {\n    id: string;\n}\n\ninterface ReplyDetailsState {\n    reply: ReplyData | null;\n    newCommentContent: string;\n}\n\nexport class ReplyDetailsInternal extends React.Component<ReplyDetailsProps, ReplyDetailsState> {\n    public constructor(props: ReplyDetailsProps) {\n        super(props)\n        this.state = {\n            reply: null,\n            newCommentContent: \"\"\n        };\n    }\n\n    public componentWillMount() {\n        (async () => {\n            const data = await getData(this.props.id);\n            this.setState({ reply: data});\n        })();\n    }\n\n    public render() {\n        if (this.state.reply === null) {\n            return <div>Loading...</div>;\n        } else {\n            return <div>\n                <Reply {...this.state.reply} />\n                <Listview\n                    items={\n                        this.state.reply.comments.map((comment, commentIndex) => {\n                            return (\n                                <Comment key={commentIndex} {...comment} />\n                            );\n                        })\n                    }\n                />\n                {this._renderCommentEditor()}\n            </div>;\n        }\n    }\n\n    private _renderCommentEditor() {\n        const token = getAuthToken();\n        if (token) {\n            return (\n                <React.Fragment>\n                    <div>\n                        <textarea\n                            className=\"input-text\"\n                            placeholder=\"Write your comment here\"\n                            value={this.state.newCommentContent}\n                            onChange={(e) => this.setState({ newCommentContent: e.currentTarget.value })}\n                        ></textarea>\n                    </div>\n                    <div>\n                        <button\n                            onClick={() => this._handleCreateComment()}\n                            style={{ width: \"60%\" }}\n                            className=\"btn\"\n                        ></button>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return <div>Please sign in if you wish to write a comment...</div>;\n        }\n    }\n\n\n    private _handleCreateComment() {\n        (async () => {\n            try {\n                const token = getAuthToken();\n                if (token && this.state.reply) {\n                    const newComment = await createComment(\n                        this.state.reply.id,\n                        this.state.newCommentContent,\n                        token\n                    );\n                }\n            } catch (err){\n\n            }\n        })();\n    }\n}\n\nexport const ReplyDetails = withRouter(props => <ReplyDetailsInternal id={props.match.params.id} />)\n\n\nasync function getData(id: string) {\n    const response = await fetch(`/replies/${id}`);\n    const json = await response.json();\n    return json as ReplyData;\n}\n\nasync function createComment(replyId: number, text: string, jwt: string) {\n    const update = {\n        replyId: replyId,\n        text: text\n    };\n    const response = await fetch(\n        \"/comments\",\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"x-auth-token\": jwt\n            },\n            body: JSON.stringify(update)\n        }\n    );\n    const json = await response.json();\n    return json;\n}\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}