{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/Desktop/Karma/frontend/src/pages/login.tsx\";\nimport * as React from \"react\";\nimport * as joi from \"joi\";\nimport { withRouter } from \"react-router-dom\";\nimport { setAuthToken } from \"../components/with_auth/with_auth\";\nvar credentialSchema = {\n  email: joi.string().email().required(),\n  password: joi.string().min(3).max(30).required()\n};\nexport var LoginOrRegisterInternal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginOrRegisterInternal, _React$Component);\n\n  function LoginOrRegisterInternal(props) {\n    var _this;\n\n    _classCallCheck(this, LoginOrRegisterInternal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginOrRegisterInternal).call(this, props));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginOrRegisterInternal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.isLogin ? \"Log In\" : \"Register\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), !this.props.isLogin ? this._renderRegister() : \"\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-text\",\n        style: {\n          width: \"80%\"\n        },\n        type: \"text\",\n        placeholder: \"e-mail\",\n        onKeyUp: function onKeyUp(e) {\n          return _this2._updateEmail(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-text\",\n        style: {\n          width: \"80%\"\n        },\n        type: \"password\",\n        placeholder: \"password\",\n        onKeyUp: function onKeyUp(e) {\n          return _this2._updatePassword(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2._renderValidationErrors();\n        },\n        className: \"btn\",\n        style: {\n          width: \"30%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"_renderServerErrors\",\n    value: function _renderServerErrors() {\n      if (this.state.error === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"error-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, this.state.error);\n      }\n    } // Display errors or OK on screen\n\n  }, {\n    key: \"_renderValidationErrors\",\n    value: function _renderValidationErrors() {\n      var validationResult = joi.validate({\n        email: this.state.email,\n        password: this.state.password\n      }, credentialSchema);\n\n      if (validationResult.error) {\n        return React.createElement(\"div\", {\n          className: \"error-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, validationResult.error.details.map(function (d, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, d.message);\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"success-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"OK!\");\n      }\n    }\n  }, {\n    key: \"_renderRegister\",\n    value: function _renderRegister() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-text\",\n        style: {\n          width: \"80%\"\n        },\n        type: \"text\",\n        placeholder: \"name\",\n        onKeyUp: function onKeyUp(e) {\n          return _this3._updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    } // Update the state (name) on keyup\n\n  }, {\n    key: \"_updateName\",\n    value: function _updateName(name) {\n      this.setState({\n        name: name\n      });\n    } // Update the state (email) on keyup\n\n  }, {\n    key: \"_updateEmail\",\n    value: function _updateEmail(email) {\n      this.setState({\n        email: email\n      });\n    } // Update the state (password) on keyup\n\n  }, {\n    key: \"_updatePassword\",\n    value: function _updatePassword(password) {\n      this.setState({\n        password: password\n      });\n    } // Send HTTP request on click\n\n  }, {\n    key: \"_handleSubmit\",\n    value: function _handleSubmit() {\n      var _this4 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var token;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!_this4.props.isLogin) {\n                  _context.next = 10;\n                  break;\n                }\n\n                // Reset error\n                _this4.setState({\n                  error: null\n                }); //Call server\n\n\n                _context.next = 5;\n                return getToken(_this4.state.email, _this4.state.password);\n\n              case 5:\n                token = _context.sent;\n                // Save token in window object\n                //(window as any).__token = token;\n                setAuthToken(token); // Redirect to home page\n\n                _this4.props.history.push(\"/\");\n\n                _context.next = 14;\n                break;\n\n              case 10:\n                // Reset error\n                _this4.setState({\n                  error: null\n                }); // Call server\n\n\n                _context.next = 13;\n                return createUserAccount(_this4.state.name, _this4.state.email, _this4.state.password);\n\n              case 13:\n                // Redirect to sign in page\n                _this4.props.history.push(\"/login\");\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this4.setState({\n                  error: _context.t0.error\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 16]]);\n      }))();\n    }\n  }]);\n\n  return LoginOrRegisterInternal;\n}(React.Component); // withRouter pass some props that contain the history to the\n// <LoginOrRegisterInternal> component and returns a new component named\n// <Login>\n\nexport var Login = withRouter(function (props) {\n  return React.createElement(LoginOrRegisterInternal, Object.assign({\n    isLogin: true\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }));\n});\nexport var Register = withRouter(function (props) {\n  return React.createElement(LoginOrRegisterInternal, Object.assign({\n    isLogin: false\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }));\n});\n\nfunction getToken(_x, _x2) {\n  return _getToken.apply(this, arguments);\n}\n\nfunction _getToken() {\n  _getToken = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(email, password) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2() {\n                var data, response, json;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        data = {\n                          email: email,\n                          password: password\n                        };\n                        _context2.next = 3;\n                        return fetch(\"/auth/login\", {\n                          method: \"POST\",\n                          headers: {\n                            \"Content-Type\": \"application/json\"\n                          },\n                          body: JSON.stringify(data)\n                        });\n\n                      case 3:\n                        response = _context2.sent;\n                        _context2.next = 6;\n                        return response.json();\n\n                      case 6:\n                        json = _context2.sent;\n\n                        if (response.status === 200) {\n                          resolve(json.token);\n                        } else {\n                          reject(json);\n                        }\n\n                      case 8:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, this);\n              }))();\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _getToken.apply(this, arguments);\n}\n\nfunction createUserAccount(_x3, _x4, _x5) {\n  return _createUserAccount.apply(this, arguments);\n}\n\nfunction _createUserAccount() {\n  _createUserAccount = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(name, email, password) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee4() {\n                var data, response, json;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        data = {\n                          name: name,\n                          email: email,\n                          password: password\n                        };\n                        _context4.next = 3;\n                        return fetch(\"/users\", {\n                          method: \"POST\",\n                          headers: {\n                            \"Content-Type\": \"application/json\"\n                          },\n                          body: JSON.stringify(data)\n                        });\n\n                      case 3:\n                        response = _context4.sent;\n                        _context4.next = 6;\n                        return response.json();\n\n                      case 6:\n                        json = _context4.sent;\n\n                        if (response.status === 200) {\n                          resolve(json.token);\n                        } else {\n                          reject(json);\n                        }\n\n                      case 8:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, this);\n              }))();\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n  return _createUserAccount.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcos/Desktop/Karma/frontend/src/pages/login.tsx"],"names":["React","joi","withRouter","setAuthToken","credentialSchema","email","string","required","password","min","max","LoginOrRegisterInternal","props","state","name","error","isLogin","_renderRegister","width","e","_updateEmail","target","value","_updatePassword","_renderValidationErrors","validationResult","validate","details","map","d","i","message","_updateName","setState","getToken","token","history","push","createUserAccount","Component","Login","Register","Promise","resolve","reject","data","fetch","method","headers","body","JSON","stringify","response","json","status"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport * as joi from \"joi\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as H from 'history';\r\nimport { setAuthToken } from \"../components/with_auth/with_auth\";\r\n\r\nconst credentialSchema = {\r\n    email: joi.string().email().required(),\r\n    password: joi.string().min(3).max(30).required()\r\n};\r\n\r\ninterface LoginOrRegisterProps {\r\n    history: H.History;\r\n    isLogin: boolean;\r\n}\r\n\r\ninterface LoginOrRegisterState {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    error: string | null;\r\n}\r\n\r\nexport class LoginOrRegisterInternal extends React.Component<LoginOrRegisterProps, LoginOrRegisterState> {\r\n    public constructor(props: LoginOrRegisterProps) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: null\r\n        };\r\n    }\r\n    public render() {\r\n        return (\r\n           <div className=\"login-container\">\r\n                <h1>{this.props.isLogin ? \"Log In\" : \"Register\"}</h1>\r\n                <div>\r\n                    {/* {this._renderServerErrors()}\r\n                    {this._renderValidationErrors()} */}\r\n                </div>\r\n                {\r\n                    !this.props.isLogin ? this._renderRegister() : \"\"\r\n                    \r\n                }             \r\n                <div>\r\n                    <input\r\n                        className=\"input-text\"\r\n                        style={{ width: \"80%\"}}\r\n                        type=\"text\"\r\n                        placeholder=\"e-mail\"\r\n                        onKeyUp={(e) => this._updateEmail((e as any).target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"input-text\"\r\n                        style={{ width: \"80%\"}}\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onKeyUp={(e) => this._updatePassword((e as any).target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={() => this._renderValidationErrors()}\r\n                        className=\"btn\"\r\n                        style={{ width: \"30%\"}}\r\n                    >\r\n                    Submit\r\n                    </button>\r\n                </div>\r\n           </div>\r\n        );\r\n    }\r\n    private _renderServerErrors() {\r\n        if (this.state.error === null) {\r\n            return <div></div>;\r\n        } else {\r\n            return <div className=\"error-msg\">{this.state.error}</div>;\r\n        }\r\n    }\r\n\r\n    // Display errors or OK on screen\r\n    private _renderValidationErrors() {\r\n        const validationResult = joi.validate({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }, credentialSchema);\r\n        if (validationResult.error) {\r\n            return <div className=\"error-msg\">\r\n                {validationResult.error.details.map((d, i) => <div key={i}>{d.message}</div>)}\r\n            </div>;\r\n        } else {\r\n            return <div className=\"success-msg\">OK!</div>;\r\n        }\r\n    }\r\n\r\n    private _renderRegister(){\r\n        return <div>\r\n            <input\r\n                className=\"input-text\"\r\n                style={{ width: \"80%\"}}\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                onKeyUp={(e) => this._updateName((e as any).target.value)}\r\n            />\r\n        </div>\r\n        \r\n    }\r\n    // Update the state (name) on keyup\r\n    private _updateName(name: string) {\r\n        this.setState({ name: name });\r\n    }\r\n    // Update the state (email) on keyup\r\n    private _updateEmail(email: string) {\r\n        this.setState({ email: email });\r\n    }\r\n    // Update the state (password) on keyup\r\n    private _updatePassword(password: string) {\r\n        this.setState({ password: password });\r\n    }\r\n    // Send HTTP request on click\r\n    private _handleSubmit() {\r\n        (async () => {\r\n            try {\r\n                if (this.props.isLogin) {\r\n                    // Reset error\r\n                    this.setState({ error: null });\r\n                    //Call server\r\n                    const token = await getToken(this.state.email, this.state.password);\r\n                    // Save token in window object\r\n                    //(window as any).__token = token;\r\n                    setAuthToken(token);\r\n                    // Redirect to home page\r\n                    this.props.history.push(\"/\");\r\n                } else {\r\n                    // Reset error\r\n                    this.setState({ error: null });\r\n                    // Call server\r\n                    await createUserAccount(this.state.name, this.state.email, this.state.password);\r\n                    // Redirect to sign in page\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            } catch(err) {\r\n                this.setState({ error: err.error });\r\n            }\r\n        })();\r\n    }\r\n}\r\n\r\n// withRouter pass some props that contain the history to the\r\n// <LoginOrRegisterInternal> component and returns a new component named\r\n// <Login>\r\nexport const Login = withRouter(props => <LoginOrRegisterInternal isLogin={true} {...props}/>);\r\nexport const Register = withRouter(props => <LoginOrRegisterInternal isLogin={false} {...props}/>);\r\n\r\nasync function getToken(email: string, password: string) {\r\n    return new Promise<string>(function (resolve, reject) {\r\n        (async () => {\r\n            const data = {\r\n                email: email,\r\n                password: password\r\n            };\r\n            const response = await fetch(\r\n                \"/auth/login\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            );\r\n            const json = await response.json();\r\n            if (response.status === 200) {\r\n                resolve(json.token);\r\n            } else {\r\n                reject(json);\r\n            }\r\n        })();\r\n    });\r\n}\r\n\r\nasync function createUserAccount(name: string, email: string, password: string) {\r\n    return new Promise<string>(function (resolve, reject) {\r\n        (async () => {\r\n            const data = {\r\n                name: name,\r\n                email: email,\r\n                password: password\r\n            };\r\n            const response = await fetch(\r\n                \"/users\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            );\r\n            const json = await response.json();\r\n            if (response.status === 200) {\r\n                resolve(json.token);\r\n            } else {\r\n                reject(json);\r\n            }\r\n        })();\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}