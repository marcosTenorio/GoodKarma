{"ast":null,"code":"import _regeneratorRuntime from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/src/pages/profile.tsx\";\nimport * as React from \"react\";\nimport { getAuthToken } from \"../components/with_auth/with_auth\";\nimport { Listview } from \"../components/listview/listview\";\nimport { withRouter } from \"react-router\";\nexport var ProfileInternal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileInternal, _React$Component);\n\n  function ProfileInternal(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileInternal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileInternal).call(this, props));\n    _this.state = {\n      user: null\n    };\n    return _this;\n  }\n\n  _createClass(ProfileInternal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _user, token, _user2;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this2.props.id) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 3;\n                return getUser(_this2.props.id);\n\n              case 3:\n                _user = _context.sent;\n\n                _this2.setState({\n                  user: _user\n                });\n\n                _context.next = 13;\n                break;\n\n              case 7:\n                token = getAuthToken();\n\n                if (!token) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 11;\n                return getProfile(token);\n\n              case 11:\n                _user2 = _context.sent;\n\n                _this2.setState({\n                  user: _user2\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.user === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Hello, \", this.state.user.name), React.createElement(Listview, {\n          items: this.state.user.links.map(function (link) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, React.createElement(\"h3\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, link.title));\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Listview, {\n          items: this.state.user.replies.map(function (reply) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, reply.text));\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return ProfileInternal;\n}(React.Component);\nexport var Profile = withRouter(function (props) {\n  return React.createElement(ProfileInternal, {\n    id: props.match.params.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  });\n});\n\nfunction getProfile(_x) {\n  return _getProfile.apply(this, arguments);\n}\n\nfunction _getProfile() {\n  _getProfile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(token) {\n    var response, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"auth/profile\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth-token\": token\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _getProfile.apply(this, arguments);\n}\n\nfunction getUser(_x2) {\n  return _getUser.apply(this, arguments);\n}\n\nfunction _getUser() {\n  _getUser = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(id) {\n    var response, json;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"users/\".concat(id), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _getUser.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/regianeivo/Documents/GoodKarma/GoodKarma/frontend/src/pages/profile.tsx"],"names":["React","getAuthToken","Listview","withRouter","ProfileInternal","props","state","user","id","getUser","setState","token","getProfile","name","links","map","link","title","replies","reply","text","Component","Profile","match","params","fetch","method","headers","response","json"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { getAuthToken } from \"../components/with_auth/with_auth\";\r\nimport { Listview } from \"../components/listview/listview\";\r\nimport { withRouter } from \"react-router\";\r\n\r\ninterface Reply {\r\n    id: number;\r\n    userId: number;\r\n    linkId: number;\r\n    text: string;\r\n}\r\n\r\ninterface Link {\r\n    id: number;\r\n    title: string;\r\n    field: string;\r\n    question: string;\r\n    userId: number;\r\n}\r\n\r\ninterface User {\r\n    name: string;\r\n    links: Link[];\r\n    replies: Reply[];\r\n}\r\n\r\ninterface ProfileProps {\r\n    id: string | undefined;\r\n}\r\n\r\ninterface ProfileState {\r\n    user: null | User;\r\n}\r\n\r\nexport class ProfileInternal extends React.Component<ProfileProps, ProfileState> {\r\n    public constructor(props: ProfileProps) {\r\n        super(props);\r\n        this.state = {\r\n            user: null\r\n        };\r\n    }\r\n\r\n    public componentWillMount() {\r\n        (async () => {\r\n            if (this.props.id) {\r\n                const user = await getUser(this.props.id);\r\n                this.setState({ user: user });\r\n            } else {\r\n                const token = getAuthToken();\r\n                if (token) {\r\n                    const user = await getProfile(token);\r\n                    this.setState({ user: user})\r\n                }\r\n            }\r\n        })();\r\n    }\r\n\r\n    public render () {\r\n        if (this.state.user === null) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return <div>\r\n                <div>Hello, {this.state.user.name}</div>\r\n                <Listview\r\n                    items={\r\n                        this.state.user.links.map(link => <div>\r\n                            <h3>{link.title}</h3>\r\n                        </div>)\r\n                    }\r\n                />\r\n                <Listview\r\n                    items={\r\n                        this.state.user.replies.map(reply => <div>\r\n                            <p>{reply.text}</p>\r\n                        </div>)\r\n                    }\r\n                />\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport const Profile = withRouter(props => <ProfileInternal id={props.match.params.id} />);\r\n\r\nasync function getProfile(token: string) {\r\n    const response = await fetch(\r\n        \"auth/profile\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": token\r\n            }\r\n        }\r\n    );\r\n    const json = await response.json();\r\n    return json;\r\n}\r\n\r\nasync function getUser(id: string) {\r\n    const response = await fetch(\r\n        `users/${id}`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n    );\r\n    const json = await response.json();\r\n    return json;\r\n}"]},"metadata":{},"sourceType":"module"}