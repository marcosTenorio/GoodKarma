{"ast":null,"code":"import _classCallCheck from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/Desktop/karma frontend/src/components/card/card.tsx\";\nimport React from 'react';\nexport var Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Card).call(this, props));\n    _this.state = {\n      isCollapsed: false\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        border: \"1px solid #eeeeee\",\n        boxShadow: \"0 10px 6px -6px #777\",\n        marginBottom: \"20px\"\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2._toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.state.isCollapsed ? \"Open\" : \"Close\"), this._renderChildren());\n    }\n  }, {\n    key: \"_renderChildren\",\n    value: function _renderChildren() {\n      if (this.state.isCollapsed) {\n        return null;\n      } else {\n        return this.props.children;\n      }\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle() {\n      // this.state.isCollapsed = false; NOT LIKE THIS!\n      this.setState({\n        isCollapsed: !this.state.isCollapsed\n      });\n    }\n  }]);\n\n  return Card;\n}(React.Component);","map":{"version":3,"sources":["/home/marcos/Desktop/karma frontend/src/components/card/card.tsx"],"names":["React","Card","props","state","isCollapsed","style","border","boxShadow","marginBottom","_toggle","_renderChildren","children","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACI,gBAAmBC,KAAnB,EAAqC;AAAA;;AAAA;;AACjC,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAFiC;AAKpC;;AANL;AAAA;AAAA,6BAOoB;AAAA;;AACZ,UAAMC,KAA0B,GAAG;AAC/BC,QAAAA,MAAM,EAAE,mBADuB;AAE/BC,QAAAA,SAAS,EAAE,sBAFoB;AAG/BC,QAAAA,YAAY,EAAE;AAHiB,OAAnC;AAKA,aAAO;AAAK,QAAA,KAAK,EAAEH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACI,OAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,KAAL,CAAWC,WAAX,GAAyB,MAAzB,GAAkC,OADvC,CADG,EAIF,KAAKM,eAAL,EAJE,CAAP;AAMH;AAnBL;AAAA;AAAA,sCAoB8B;AACtB,UAAI,KAAKP,KAAL,CAAWC,WAAf,EAA4B;AACxB,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAKF,KAAL,CAAWS,QAAlB;AACH;AACJ;AA1BL;AAAA;AAAA,8BA2BsB;AACd;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACH;AA9BL;;AAAA;AAAA,EAA0BJ,KAAK,CAACa,SAAhC","sourcesContent":["import React from 'react';\r\n\r\ninterface CardProps {\r\n    items: JSX.Element[];\r\n}\r\n\r\ninterface CardState {\r\n    isCollapsed: boolean;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps, CardState> {\r\n    public constructor(props: CardProps) {\r\n        super(props);\r\n        this.state = {\r\n            isCollapsed: false\r\n        };\r\n    }\r\n    public render() {\r\n        const style: React.CSSProperties = {\r\n            border: \"1px solid #eeeeee\",\r\n            boxShadow: \"0 10px 6px -6px #777\",\r\n            marginBottom: \"20px\"\r\n        };\r\n        return <div style={style}>\r\n            <button onClick={() => this._toggle()}>\r\n                {this.state.isCollapsed ? \"Open\" : \"Close\"}\r\n            </button>\r\n            {this._renderChildren()}\r\n        </div>;\r\n    }\r\n    private _renderChildren() {\r\n        if (this.state.isCollapsed) {\r\n            return null;\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n    private _toggle() {\r\n        // this.state.isCollapsed = false; NOT LIKE THIS!\r\n        this.setState({ isCollapsed: !this.state.isCollapsed });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}