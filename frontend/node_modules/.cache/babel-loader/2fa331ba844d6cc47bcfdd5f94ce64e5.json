{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/Desktop/karma frontend/src/pages/profile.tsx\";\nimport * as React from \"react\";\nexport var Profile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      user: null\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var token, _user;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = window.__token;\n\n                if (!token) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return getUser(token);\n\n              case 4:\n                _user = _context.sent;\n\n                _this2.setState({\n                  user: _user\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.user === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, this.state.user.email);\n      }\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nfunction getUser(_x) {\n  return _getUser.apply(this, arguments);\n}\n\nfunction _getUser() {\n  _getUser = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(token) {\n    var reponse, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/profile\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth-token\": token\n              }\n            });\n\n          case 2:\n            reponse = _context2.sent;\n            _context2.next = 5;\n            return reponse.json();\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _getUser.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcos/Desktop/karma frontend/src/pages/profile.tsx"],"names":["React","Profile","props","state","user","token","window","__token","getUser","setState","email","Component","fetch","method","headers","reponse","json"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAYA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AACI,mBAAmBC,KAAnB,EAAwC;AAAA;;AAAA;;AACpC,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAFoC;AAKvC;;AANL;AAAA;AAAA,yCAOgC;AAAA;;AACxB;AAAA;AAAA,+BAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACSC,gBAAAA,KADT,GACsCC,MAAD,CAAgBC,OADrD;;AAAA,qBAEOF,KAFP;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAG0BG,OAAO,CAACH,KAAD,CAHjC;;AAAA;AAGaD,gBAAAA,KAHb;;AAIO,gBAAA,MAAI,CAACK,QAAL,CAAc;AAAEL,kBAAAA,IAAI,EAAEA;AAAR,iBAAd;;AAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAOH;AAfL;AAAA;AAAA,6BAgBoB;AACZ,UAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,IAAxB,EAA8B;AAC1B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAFD,MAEO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,KAAKD,KAAL,CAAWC,IAAX,CAAgBM,KAAtB,CAAP;AACH;AACJ;AAtBL;;AAAA;AAAA,EAA6BV,KAAK,CAACW,SAAnC;;SAyBeH,O;;;;;;;2BAAf,kBAAuBH,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0BO,KAAK,CACvB,UADuB,EAEvB;AACIC,cAAAA,MAAM,EAAE,MADZ;AAEIC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,gCAAgBT;AAFX;AAFb,aAFuB,CAD/B;;AAAA;AACUU,YAAAA,OADV;AAAA;AAAA,mBAWuBA,OAAO,CAACC,IAAR,EAXvB;;AAAA;AAWUA,YAAAA,IAXV;AAAA,8CAYWA,IAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface User {\r\n    email: string;\r\n}\r\n\r\ninterface ProfileProps {}\r\n\r\ninterface ProfileState {\r\n    user: null | User;\r\n}\r\n\r\nexport class Profile extends React.Component<ProfileProps, ProfileState> {\r\n    public constructor(props: ProfileProps) {\r\n        super(props);\r\n        this.state = {\r\n            user: null\r\n        };\r\n    }\r\n    public componentWillMount() {\r\n        (async () => {\r\n            const token: string | undefined = (window as any).__token;\r\n            if (token) {\r\n                const user = await getUser(token);\r\n                this.setState({ user: user });\r\n            }\r\n        })();\r\n    }\r\n    public render() {\r\n        if (this.state.user === null) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return <div>{this.state.user.email}</div>\r\n        }\r\n    }\r\n}\r\n\r\nasync function getUser(token: string) {\r\n    const reponse = await fetch(\r\n        \"/profile\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": token\r\n            }\r\n        }\r\n    );\r\n    const json = await reponse.json();\r\n    return json;\r\n}"]},"metadata":{},"sourceType":"module"}