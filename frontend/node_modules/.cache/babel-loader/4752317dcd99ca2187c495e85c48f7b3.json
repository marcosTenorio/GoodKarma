{"ast":null,"code":"import _classCallCheck from \"/home/marcos/CODE2/week 3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/CODE2/week 3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/CODE2/week 3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/CODE2/week 3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/CODE2/week 3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/CODE2/week 3/src/components/card/card.tsx\";\nimport React from 'react';\nexport var Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Card).call(this, props));\n    _this.state = {\n      isCollapsed: false,\n      bgColor: \"#ffffff\"\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        boxShadow: \"0 2px 5px 0 rgba(0,0,0,.16), 0 2px 10px 0 rgba(0,0,0,.12)\",\n        padding: \"1.25rem\",\n        paddingTop: \"1.5rem\",\n        paddingBottom: \"1.5rem\",\n        marginTop: \"30px\",\n        marginBottom: \"30px\",\n        backgroundColor: this.state.bgColor\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2._toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.state.isCollapsed ? \"Open\" : \"Close\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2._changeColor();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Change Color\"), function () {\n        if (_this2.state.isCollapsed) {\n          return null;\n        } else {\n          return _this2.props.children;\n        }\n      }());\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle() {\n      // this.state.isCollapsed = !this.state.isCollapsed; NOT LIKE THIS!\n      this.setState({\n        isCollapsed: !this.state.isCollapsed\n      });\n    }\n  }, {\n    key: \"_changeColor\",\n    value: function _changeColor() {\n      var randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n      this.setState({\n        bgColor: randomColor\n      });\n    }\n  }]);\n\n  return Card;\n}(React.Component);","map":{"version":3,"sources":["/home/marcos/CODE2/week 3/src/components/card/card.tsx"],"names":["React","Card","props","state","isCollapsed","bgColor","style","boxShadow","padding","paddingTop","paddingBottom","marginTop","marginBottom","backgroundColor","_toggle","_changeColor","children","setState","randomColor","Math","floor","random","toString","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAWA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACI,gBAAmBC,KAAnB,EAAqC;AAAA;;AAAA;;AACjC,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAFiC;AAMpC;;AAPL;AAAA;AAAA,6BAQoB;AAAA;;AACZ,UAAMC,KAA0B,GAAG;AAC/BC,QAAAA,SAAS,EAAE,2DADoB;AAE/BC,QAAAA,OAAO,EAAE,SAFsB;AAG/BC,QAAAA,UAAU,EAAE,QAHmB;AAI/BC,QAAAA,aAAa,EAAE,QAJgB;AAK/BC,QAAAA,SAAS,EAAE,MALoB;AAM/BC,QAAAA,YAAY,EAAE,MANiB;AAO/BC,QAAAA,eAAe,EAAE,KAAKV,KAAL,CAAWE;AAPG,OAAnC;AASA,aAAO;AAAK,QAAA,KAAK,EAAEC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACQ,OAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKX,KAAL,CAAWC,WAAX,GAAyB,MAAzB,GAAkC,OADvC,CADG,EAIH;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACW,YAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJG,EAQE,YAAM;AACH,YAAI,MAAI,CAACZ,KAAL,CAAWC,WAAf,EAA4B;AACxB,iBAAO,IAAP;AACH,SAFD,MAEO;AACH,iBAAO,MAAI,CAACF,KAAL,CAAWc,QAAlB;AACH;AACJ,OAND,EARD,CAAP;AAiBH;AAnCL;AAAA;AAAA,8BAoCsB;AACd;AACA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACH;AAvCL;AAAA;AAAA,mCAwC2B;AACnB,UAAMc,WAAW,GAAG,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAxB;AACA,WAAKL,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAEa;AAAX,OAAd;AACH;AA3CL;;AAAA;AAAA,EAA0BlB,KAAK,CAACuB,SAAhC","sourcesContent":["import React from 'react';\r\n\r\ninterface CardProps {\r\n    //\r\n}\r\n\r\ninterface CardState {\r\n    isCollapsed: boolean;\r\n    bgColor: string;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps, CardState> {\r\n    public constructor(props: CardProps) {\r\n        super(props);\r\n        this.state = {\r\n            isCollapsed: false,\r\n            bgColor: \"#ffffff\"\r\n        };\r\n    }\r\n    public render() {\r\n        const style: React.CSSProperties = {\r\n            boxShadow: \"0 2px 5px 0 rgba(0,0,0,.16), 0 2px 10px 0 rgba(0,0,0,.12)\",\r\n            padding: \"1.25rem\",\r\n            paddingTop: \"1.5rem\",\r\n            paddingBottom: \"1.5rem\",\r\n            marginTop: \"30px\",\r\n            marginBottom: \"30px\",\r\n            backgroundColor: this.state.bgColor\r\n        };\r\n        return <div style={style}>\r\n            <button onClick={() => this._toggle()}>\r\n                {this.state.isCollapsed ? \"Open\" : \"Close\" }\r\n            </button>\r\n            <button onClick={() => this._changeColor()}>\r\n                Change Color\r\n            </button>\r\n            {\r\n                (() => {\r\n                    if (this.state.isCollapsed) {\r\n                        return null;\r\n                    } else {\r\n                        return this.props.children;\r\n                    }\r\n                })()\r\n            }\r\n        </div>;\r\n    }\r\n    private _toggle() {\r\n        // this.state.isCollapsed = !this.state.isCollapsed; NOT LIKE THIS!\r\n        this.setState({ isCollapsed: !this.state.isCollapsed });\r\n    }\r\n    private _changeColor() {\r\n        const randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\r\n        this.setState({ bgColor: randomColor });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}