{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/Desktop/Karma/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/Desktop/Karma/frontend/src/components/reply/reply.tsx\";\nimport React from 'react';\nimport karma from \"../../karma.png\";\nimport { getAuthToken } from '../with_auth/with_auth';\nimport { ReplyDetailsInternal } from '../../pages/replyDetails';\nimport { withRouter } from \"react-router\";\nexport var Reply =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reply, _React$Component);\n\n  function Reply(props) {\n    var _this;\n\n    _classCallCheck(this, Reply);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reply).call(this, props));\n    _this.state = {\n      reply: null\n    };\n    return _this;\n  }\n\n  _createClass(Reply, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"table\", {\n        className: \"comment-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Karma\"), React.createElement(\"button\", {\n        className: \"karma\",\n        onClick: function onClick() {\n          return _this2._handleKarmaVote();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: karma,\n        style: {\n          height: \"30px\",\n          padding: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.karmaCount))), React.createElement(\"td\", {\n        className: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"audit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.renderTimeSinceDate(this.props.date), \" ago by \", this.props.name), React.createElement(\"h2\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.text)))));\n    }\n  }, {\n    key: \"_handleKarmaVote\",\n    value: function _handleKarmaVote() {\n      var _this3 = this;\n\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var token, _karma;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                token = getAuthToken();\n\n                if (!token) {\n                  _context.next = 7;\n                  break;\n                }\n\n                if (!(_this3.state.reply !== null)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 6;\n                return karmaVote(_this3.state.reply.id, token);\n\n              case 6:\n                _karma = _context.sent;\n\n              case 7:\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"renderTimeSinceDate\",\n    value: function renderTimeSinceDate(jsonDate) {\n      var time = Date.parse(jsonDate);\n      var now = new Date().getTime();\n      var difference = (now - time) / 1000;\n      var seconds = Math.ceil(difference);\n      var minutes = Math.ceil(seconds / 60);\n      var hours = Math.ceil(minutes / 60);\n      var days = Math.ceil(hours / 24);\n\n      if (seconds < 60) {\n        return \"\".concat(seconds, \" seconds\");\n      } else if (minutes < 60) {\n        return \"\".concat(minutes, \" minutes\");\n      } else if (hours < 24) {\n        return \"\".concat(hours, \" hours\");\n      } else {\n        return \"\".concat(days, \" days\");\n      }\n    }\n  }]);\n\n  return Reply;\n}(React.Component);\nexport var ReplyDetails = withRouter(function (props) {\n  return React.createElement(ReplyDetailsInternal, {\n    id: props.match.params.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  });\n});\n\nfunction karmaVote(_x, _x2) {\n  return _karmaVote.apply(this, arguments);\n}\n\nfunction _karmaVote() {\n  _karmaVote = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(replyId, jwt) {\n    var update, response, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            update = {\n              replyId: replyId\n            };\n            _context2.next = 3;\n            return fetch(\"/replies/\".concat(replyId, \"/karmavote\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth-token\": jwt\n              },\n              body: JSON.stringify(update)\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _karmaVote.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcos/Desktop/Karma/frontend/src/components/reply/reply.tsx"],"names":["React","karma","getAuthToken","ReplyDetailsInternal","withRouter","Reply","props","state","reply","_handleKarmaVote","height","padding","karmaCount","renderTimeSinceDate","date","name","text","token","karmaVote","id","jsonDate","time","Date","parse","now","getTime","difference","seconds","Math","ceil","minutes","hours","days","Component","ReplyDetails","match","params","replyId","jwt","update","fetch","method","headers","body","JSON","stringify","response","json"],"mappings":"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","sourcesContent":["import React from 'react';\nimport karma from \"../../karma.png\"\nimport { getAuthToken } from '../with_auth/with_auth';\nimport { ReplyDetailsInternal } from '../../pages/replyDetails';\nimport { withRouter } from \"react-router\";\n\nexport interface ReplyPreviewDetails {\n    id: number;\n    userId: number;\n    name: string;\n    text: string;\n    date: string;\n    commentCount: number | null;\n    karmaCount: number | null;\n}\n\ninterface ReplyProps extends ReplyPreviewDetails {\n}\n\ninterface ReplyState {\n    reply: ReplyPreviewDetails | null;\n}\n\nexport class Reply extends React.Component<ReplyProps, ReplyState> {\n    public constructor(props: ReplyProps) {\n        super(props);\n        this.state = {\n            reply: null\n        }\n    }\n    public render() {\n        return (\n            <table className=\"comment-details\">\n                <tbody>\n                    <tr>\n                        <td className=\"left\">\n                            <div>\n                                <div>Karma</div>\n                                <button className = \"karma\" \n                                        onClick={() => this._handleKarmaVote()\n                                }>\n                                    <img \n                                        src = {karma}\n                                        style = {{height: \"30px\", padding: \"5px\"}}\n                                    />\n                                </button>\n                                <div>{this.props.karmaCount}</div>\n                            </div>\n                        </td>\n                        <td className=\"right\">\n                            <div className=\"audit\">{this.renderTimeSinceDate(this.props.date)} ago by {this.props.name}</div>\n                            <h2 className=\"content\">{this.props.text}</h2>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n\n    private _handleKarmaVote(){\n        (async () => {\n            try {\n                const token = getAuthToken();\n                if(token){\n                    if(this.state.reply !== null){\n                        const karma = await karmaVote(\n                            this.state.reply.id,\n                            token\n                        );\n                    }\n                }\n            } catch (err){\n            }\n        })\n    }\n\n    private renderTimeSinceDate(jsonDate: string) {\n        const time = Date.parse(jsonDate);\n        const now = new Date().getTime();\n        const difference = (now - time) / 1000;\n        const seconds = Math.ceil(difference);\n        const minutes = Math.ceil(seconds / 60);\n        const hours = Math.ceil(minutes / 60);\n        const days = Math.ceil(hours / 24);\n        if (seconds < 60) {\n            return `${seconds} seconds`;\n        } else if (minutes < 60) {\n            return `${minutes} minutes`;\n        } else if (hours < 24) {\n            return `${hours} hours`;\n        } else {\n            return `${days} days`;\n        }\n    }\n}\n\nexport const ReplyDetails = withRouter(props => <ReplyDetailsInternal id={props.match.params.id} />)\n\nasync function karmaVote(replyId: number, jwt: string) {\n    const update = {\n        replyId: replyId\n    };\n    const response = await fetch(\n        `/replies/${replyId}/karmavote`,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth-token\": jwt\n            },\n            body: JSON.stringify(update)\n        }\n    );\n    const json = await response.json();\n    return json;\n}\n\n"]},"metadata":{},"sourceType":"module"}