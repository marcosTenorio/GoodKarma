{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/CODE2/week 5/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/CODE2/week 5/src/pages/login.tsx\";\nimport * as React from \"react\";\nimport * as joi from \"joi\";\nvar credentialSchema = {\n  email: joi.string().email().required(),\n  password: joi.string().min(3).max(30).required()\n};\nexport var Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this._renderErrors(), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        onKeyUp: function onKeyUp(e) {\n          return _this2._updateEmail(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onKeyUp: function onKeyUp(e) {\n          return _this2._updatePassword(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2._handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Submit\"));\n    } // Display errors or OK on screen\n\n  }, {\n    key: \"_renderErrors\",\n    value: function _renderErrors() {\n      var validationResult = joi.validate({\n        email: this.state.email,\n        password: this.state.password\n      }, credentialSchema);\n\n      if (validationResult.error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, validationResult.error.details.map(function (d) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, d.message);\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"OK!\");\n      }\n    } // Update the state (email) on keyup\n\n  }, {\n    key: \"_updateEmail\",\n    value: function _updateEmail(email) {\n      this.setState({\n        email: email\n      });\n    } // Update the state (password) on keyup\n\n  }, {\n    key: \"_updatePassword\",\n    value: function _updatePassword(password) {\n      this.setState({\n        password: password\n      });\n    } // Send HTTP request on click\n\n  }, {\n    key: \"_handleSubmit\",\n    value: function _handleSubmit() {\n      var _this3 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getToken(_this3.state.email, _this3.state.password);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }]);\n\n  return Login;\n}(React.Component); //\n\nfunction getToken(_x, _x2) {\n  return _getToken.apply(this, arguments);\n}\n\nfunction _getToken() {\n  _getToken = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(email, password) {\n    var data, response, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = {\n              email: email,\n              password: password\n            };\n            _context2.next = 3;\n            return fetch(\"/data/login.json\", {\n              method: \"GET\",\n              // in a real example should be POST\n              headers: {\n                'Content-Type': 'application/json'\n              } // in a real example the data is send in the request body\n              // body: JSON.stringify(data)\n\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json.token);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _getToken.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcos/CODE2/week 5/src/pages/login.tsx"],"names":["React","joi","credentialSchema","email","string","required","password","min","max","Login","props","state","_renderErrors","e","_updateEmail","target","value","_updatePassword","_handleSubmit","validationResult","validate","error","details","map","d","message","setState","getToken","Component","data","fetch","method","headers","response","json","token"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAEF,GAAG,CAACG,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EADc;AAErBC,EAAAA,QAAQ,EAAEL,GAAG,CAACG,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BH,QAA5B;AAFW,CAAzB;AAYA,WAAaI,KAAb;AAAA;AAAA;AAAA;;AACI,iBAAmBC,KAAnB,EAAsC;AAAA;;AAAA;;AAClC,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTR,MAAAA,KAAK,EAAE,EADE;AAETG,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFkC;AAMrC;;AAPL;AAAA;AAAA,6BAQoB;AAAA;;AACZ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKM,aAAL,EADL,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,OAFhB;AAGI,QAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,iBAAO,MAAI,CAACC,YAAL,CAAmBD,CAAD,CAAWE,MAAX,CAAkBC,KAApC,CAAP;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,OAAO,EAAE,iBAACH,CAAD;AAAA,iBAAO,MAAI,CAACI,eAAL,CAAsBJ,CAAD,CAAWE,MAAX,CAAkBC,KAAvC,CAAP;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAYI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,aAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,CADJ;AAgBH,KAzBL,CA0BI;;AA1BJ;AAAA;AAAA,oCA2B4B;AACpB,UAAMC,gBAAgB,GAAGlB,GAAG,CAACmB,QAAJ,CAAa;AAClCjB,QAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,KADgB;AAElCG,QAAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWL;AAFa,OAAb,EAGtBJ,gBAHsB,CAAzB;;AAIA,UAAIiB,gBAAgB,CAACE,KAArB,EAA4B;AACxB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFF,gBAAgB,CAACE,KAAjB,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmC,UAAAC,CAAC;AAAA,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAMA,CAAC,CAACC,OAAR,CAAJ;AAAA,SAApC,CADE,CAAP;AAGH,OAJD,MAIO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;AACJ,KAvCL,CAwCI;;AAxCJ;AAAA;AAAA,iCAyCyBtB,KAzCzB,EAyCwC;AAChC,WAAKuB,QAAL,CAAc;AAAEvB,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACH,KA3CL,CA4CI;;AA5CJ;AAAA;AAAA,oCA6C4BG,QA7C5B,EA6C8C;AACtC,WAAKoB,QAAL,CAAc;AAAEpB,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACH,KA/CL,CAgDI;;AAhDJ;AAAA;AAAA,oCAiD4B;AAAA;;AACpB;AAAA;AAAA,+BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACSqB,QAAQ,CAAC,MAAI,CAAChB,KAAL,CAAWR,KAAZ,EAAmB,MAAI,CAACQ,KAAL,CAAWL,QAA9B,CADjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAGH;AArDL;;AAAA;AAAA,EAA2BN,KAAK,CAAC4B,SAAjC,E,CAwDA;;SACeD,Q;;;;;;;2BAAf,kBAAwBxB,KAAxB,EAAuCG,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUuB,YAAAA,IADV,GACiB;AACT1B,cAAAA,KAAK,EAAEA,KADE;AAETG,cAAAA,QAAQ,EAAEA;AAFD,aADjB;AAAA;AAAA,mBAK2BwB,KAAK,CACxB,kBADwB,EAExB;AACIC,cAAAA,MAAM,EAAE,KADZ;AACmB;AACfC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFb,CAKI;AACA;;AANJ,aAFwB,CALhC;;AAAA;AAKUC,YAAAA,QALV;AAAA;AAAA,mBAgBuBA,QAAQ,CAACC,IAAT,EAhBvB;;AAAA;AAgBUA,YAAAA,IAhBV;AAAA,8CAkBWA,IAAI,CAACC,KAlBhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as React from \"react\";\r\nimport * as joi from \"joi\";\r\n\r\nconst credentialSchema = {\r\n    email: joi.string().email().required(),\r\n    password: joi.string().min(3).max(30).required()\r\n};\r\n\r\ninterface LoginProps {}\r\n\r\ninterface LoginState {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport class Login extends React.Component<LoginProps, LoginState> {\r\n    public constructor(props: LoginProps) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n    public render() {\r\n        return (\r\n            <div>\r\n                {this._renderErrors()}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    onKeyUp={(e) => this._updateEmail((e as any).target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onKeyUp={(e) => this._updatePassword((e as any).target.value)}\r\n                />\r\n                <button onClick={() => this._handleSubmit()}>Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n    // Display errors or OK on screen\r\n    private _renderErrors() {\r\n        const validationResult = joi.validate({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }, credentialSchema);\r\n        if (validationResult.error) {\r\n            return <div>\r\n                {validationResult.error.details.map(d => <div>{d.message}</div>)}\r\n            </div>;\r\n        } else {\r\n            return <div>OK!</div>;\r\n        }\r\n    }\r\n    // Update the state (email) on keyup\r\n    private _updateEmail(email: string) {\r\n        this.setState({ email: email });\r\n    }\r\n    // Update the state (password) on keyup\r\n    private _updatePassword(password: string) {\r\n        this.setState({ password: password });\r\n    }\r\n    // Send HTTP request on click\r\n    private _handleSubmit() {\r\n        (async () => {\r\n            await getToken(this.state.email, this.state.password);\r\n        })();\r\n    }\r\n}\r\n\r\n//\r\nasync function getToken(email: string, password: string) {\r\n    const data = {\r\n        email: email,\r\n        password: password\r\n    };\r\n    const response = await fetch(\r\n        \"/data/login.json\",\r\n        {\r\n            method: \"GET\", // in a real example should be POST\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            // in a real example the data is send in the request body\r\n            // body: JSON.stringify(data)\r\n        }\r\n    );\r\n    const json = await response.json();\r\n    // JSON should look like { token: \"fijwe4iprwri239049034ucfij3490jiwf03480hfr45h40\" }\r\n    return json.token;\r\n}"]},"metadata":{},"sourceType":"module"}