{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marcos/Desktop/karma frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marcos/Desktop/karma frontend/src/pages/links.tsx\";\nimport * as React from \"react\";\nimport { Card } from \"../components/card/card\";\nimport { Link } from \"react-router-dom\";\nexport var Links =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Links, _React$Component);\n\n  function Links(props) {\n    var _this;\n\n    _classCallCheck(this, Links);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Links).call(this, props));\n    _this.state = {\n      links: null\n    };\n    return _this;\n  }\n\n  _createClass(Links, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getData();\n\n              case 2:\n                data = _context.sent;\n\n                _this2.setState({\n                  links: data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.links === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, this._renderPrivate(), React.createElement(Card, {\n          items: this.state.links.map(function (links) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, links.title, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }), links.question);\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"_renderPrivate\",\n    value: function _renderPrivate() {\n      var token = window.__token;\n\n      if (typeof token === \"string\") {\n        return React.createElement(Link, {\n          style: {\n            color: \"#ffffff\"\n          },\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Profile\");\n      }\n    }\n  }]);\n\n  return Links;\n}(React.Component);\n\nfunction getData() {\n  return _getData.apply(this, arguments);\n}\n\nfunction _getData() {\n  _getData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var response, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/links\");\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _getData.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/marcos/Desktop/karma frontend/src/pages/links.tsx"],"names":["React","Card","Link","Links","props","state","links","getData","data","setState","_renderPrivate","map","title","question","token","window","__token","color","Component","fetch","response","json"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,yBAArB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAkBA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AACI,iBAAmBC,KAAnB,EAAuC;AAAA;;AAAA;;AACnC,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAFmC;AAKtC;;AANL;AAAA;AAAA,wCAO+B;AAAA;;AACvB;AAAA;AAAA,+BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBC,OAAO,EAD7B;;AAAA;AACSC,gBAAAA,IADT;;AAEG,gBAAA,MAAI,CAACC,QAAL,CAAc;AAAEH,kBAAAA,KAAK,EAAEE;AAAT,iBAAd;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAIH;AAZL;AAAA;AAAA,6BAaoB;AACZ,UAAI,KAAKH,KAAL,CAAWC,KAAX,KAAqB,IAAzB,EAA+B;AAC3B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAFD,MAEO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF,KAAKI,cAAL,EADE,EAEH,oBAAC,IAAD;AACI,UAAA,KAAK,EACD,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqB,UAACL,KAAD,EAAW;AAC5B,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACFA,KAAK,CAACM,KADJ,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE,EAGFN,KAAK,CAACO,QAHJ,CAAP;AAKH,WAND,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFG,CAAP;AAcH;AACJ;AAhCL;AAAA;AAAA,qCAiC6B;AACrB,UAAMC,KAAyB,GAAIC,MAAD,CAAgBC,OAAlD;;AACA,UAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC3B,eAAO,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAmC,UAAA,EAAE,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;AACJ;AAtCL;;AAAA;AAAA,EAA2BjB,KAAK,CAACkB,SAAjC;;SAyCeX,O;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC2BY,KAAK,CAAC,QAAD,CADhC;;AAAA;AACUC,YAAAA,QADV;AAAA;AAAA,mBAEuBA,QAAQ,CAACC,IAAT,EAFvB;;AAAA;AAEUA,YAAAA,IAFV;AAAA,8CAGWA,IAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as React from \"react\";\r\nimport { Card } from \"../components/card/card\"\r\nimport { Listview } from \"../components/listview/listview\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface LinksItem {\r\n    userId: number;\r\n    id: number;\r\n    title: string;\r\n    question: string;\r\n    completed: boolean;\r\n}\r\n\r\ninterface LinkssProps {\r\n    //\r\n}\r\n\r\ninterface LinkssState {\r\n    links: LinksItem[] | null;\r\n}\r\n\r\nexport class Links extends React.Component<LinkssProps, LinkssState> {\r\n    public constructor(props: LinkssProps) {\r\n        super(props);\r\n        this.state = {\r\n            links: null\r\n        };\r\n    }\r\n    public componentDidMount() {\r\n        (async () => {\r\n            const data = await getData();\r\n            this.setState({ links: data });\r\n        })();\r\n    }\r\n    public render() {\r\n        if (this.state.links === null) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return <div>\r\n                {this._renderPrivate()}\r\n                <Card\r\n                    items={\r\n                        this.state.links.map((links) => {\r\n                            return <div>\r\n                                {links.title}\r\n                                {<br></br>}\r\n                                {links.question}\r\n                            </div>;\r\n                        })\r\n                    }\r\n                />\r\n            </div>;\r\n        }\r\n    }\r\n    private _renderPrivate() {\r\n        const token: string | undefined = (window as any).__token;\r\n        if (typeof token === \"string\") {\r\n            return <Link style={{ color: \"#ffffff\" }} to=\"/profile\">Profile</Link>\r\n        }\r\n    }\r\n}\r\n\r\nasync function getData() {\r\n    const response = await fetch(\"/links\");\r\n    const json = await response.json();\r\n    return json as LinksItem[];\r\n}"]},"metadata":{},"sourceType":"module"}